--- arch/x86/iodev/floppy.cc.orig	2009-10-16 16:58:40.000000000 +0200
+++ arch/x86/iodev/floppy.cc	2010-02-27 17:58:59.000000000 +0100
@@ -685,7 +685,7 @@
   for (i=0; i<BX_FD_THIS s.command_size; i++) {
     p += sprintf(p, "[%02x] ", (unsigned) BX_FD_THIS s.command[i]);
   }
-  BX_DEBUG((buf));
+  BX_DEBUG(("%s", buf));
 
   BX_FD_THIS s.pending_command = BX_FD_THIS s.command[0];
   switch (BX_FD_THIS s.pending_command) {
@@ -1812,7 +1812,7 @@
   for (i=0; i<BX_FD_THIS s.result_size; i++) {
     p += sprintf(p, "[%02x] ", (unsigned) BX_FD_THIS s.result[i]);
   }
-  BX_DEBUG((buf));
+  BX_DEBUG(("%s", buf));
 }
 
 void bx_floppy_ctrl_c::enter_idle_phase(void)
--- arch/x86/iodev/hdimage.cc.orig	2009-10-21 16:36:51.000000000 +0200
+++ arch/x86/iodev/hdimage.cc	2010-02-27 18:08:06.000000000 +0100
@@ -616,7 +616,7 @@
   {
     snprintf(buffer, sizeof(buffer), "error with sparse disk image %s - %s", pathname, message);
   }
-  BX_PANIC((buffer));
+  BX_PANIC(("%s", buffer));
 }
 
 ssize_t sparse_image_t::write (const void* buf, size_t count)


--- third-party/include/dis-asm.h.orig      2009-09-23 16:01:02.000000000 +0200
+++ third-party/include/dis-asm.h   2012-11-25 16:42:18.379923242 +0100
@@ -33,6 +33,7 @@
 #endif
 
 #include <stdio.h>
+#include <config.h>
 #include "bfd.h"
 
   typedef int (*fprintf_ftype) (void *, const char*, ...) /*ATTRIBUTE_FPTR_PRINTF_2*/;
 
--- common/loader/loader_elf.c.orig   2009-09-23 16:01:02.000000000 +0200
+++ common/loader/loader_elf.c        2012-11-25 16:56:15.519562561 +0100
@@ -234,6 +234,7 @@
 #else //#ifndef HAVE_LIBBFD
 
 //teawater add for load elf 2005.07.31------------------------------------------
+#include <config.h>
 #include <bfd.h>
 
 static exception_t
 
--- utils/uart_console/uart_console.c.orig 2009-09-23 16:01:02.000000000 +0200
+++ utils/uart_console/uart_console.c      2012-11-25 17:25:50.737365582 +0100
@@ -55,12 +55,14 @@
 #include <sys/stream.h>
 #include <thread.h>
 #else
+/*
 const uint32_t POLLRDNORM = 0x040; 
 const uint32_t POLLRDBAND = 0x080; 
 //const uint32_t POLLPRI = 0x002; 
 //const uint32_t POLLOUT = 0x004; 
 const uint32_t POLLWRNORM = 0x100; 
 const uint32_t POLLWRBAND = 0x200;
+*/
 #endif
 
 static int setup_term();
